name: Conan Build

on:
  workflow_call:
    inputs:
      platform:
        required: false
        default: 'ubuntu-24.04'
        type: string
      branch:
        required: true
        type: string
      build-type:
        required: true
        type: string
      malloc-impl:
        required: true
        type: string
      prerelease:
        required: true
        type: string
      tooling:
        required: false
        type: string
        default: 'None'
      testing:
        required: false
        type: string
        default: 'False'
  workflow_dispatch:
    inputs:
      platform:
        required: true
        type: choice
        options:
          - ubuntu-24.04
        default: 'ubuntu-24.04'
      branch:
        required: true
        type: string
      build-type:
        required: true
        type: choice
        options:
          - Debug
          - Release
          - RelWithDebInfo
      malloc-impl:
        description: 'Allocation Library'
        required: true
        type: choice
        options:
          - libc
          - tcmalloc
          - jemalloc
      prerelease:
        description: 'Fault Instrumentation'
        required: false
        type: choice
        options:
          - 'True'
          - 'False'
        default: 'False'
      tooling:
        required: false
        type: choice
          - 'Sanitize'
          - 'Coverage'
          - 'None'
        default: 'None'
      testing:
        description: 'Build and Run'
        required: true
        type: choice
        options:
          - 'True'
          - 'False'
        default: 'True'

jobs:
  BuildHomeObjectDeps:
    runs-on: ${{ inputs.platform }}
    steps:
    - name: Retrieve Code
      uses: actions/checkout@main
      with:
        ref: ${{ inputs.branch }}
      if: ${{ inputs.testing == 'True' }}

    - name: Retrieve Recipe
      uses: actions/checkout@main
      with:
        repository: eBay/HomeObject
        ref: ${{ inputs.branch }}
      if: ${{ inputs.testing == 'False' }}

    - name: Setup Conan
      uses: ebay/sisl/.github/actions/setup_conan2@master
      with:
        platform: ${{ inputs.platform }}
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Load HomeObject Cache
      id: restore-cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        testing: ${{ inputs.testing }}
        key_prefix: HomeObjectDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}

    - name: Load Sisl Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        load_any: 'True'
        key_prefix: SislDeps13-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Load IOMgr Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        load_any: 'True'
        key_prefix: IOMgrDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Retrieve Dependencies NuRaftMesg
      uses: actions/checkout@main
      with:
        repository: eBay/nuraft_mesg
        path: import/nuraft_mesg
        ref: main
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Load NuRaftMesg Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        testing: 'False'
        path: import/nuraft_mesg
        key_prefix: NuMesgDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}
        fail_on_cache_miss: true
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Retrieve Dependencies HomeStore
      uses: actions/checkout@main
      with:
        repository: eBay/HomeStore
        path: import/homestore
        ref: master
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Load HomeStore Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        testing: 'False'
        path: import/homestore
        key_prefix: HomestoreDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}
        fail_on_cache_miss: true
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}


    - name: Export Recipes
      run: |
        sudo apt-get install -y python3-pyelftools libaio-dev
        python -m pip install pyelftools
        conan export --user oss --channel master import/homestore
        conan export --user oss --channel main import/nuraft_mesg
      if: ${{ inputs.testing == 'True' || steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Build Cache
      run: |
        pre=$([[ "${{ inputs.build-type }}" != "Debug" ]] && echo "-o iomgr/*:prerelease=${{ inputs.prerelease }}" || echo "")
        echo "Disk space usage"
        sudo df -h
        sudo ls -l /tmp
        sudo rm -rf $ANDROID_HOME
        echo "Disk space usage after cleanup"
        sudo df -h
        conan install \
            -c tools.build:skip_test=True \
            ${pre} \
            -o sisl/*:malloc_impl=${{ inputs.malloc-impl }} \
            -o iomgr/*:testing=off \
            -o homestore/*:testing=off \
            -s:h build_type=${{ inputs.build-type }} \
            -c tools.build:skip_test=True \
            --format=json \
            --build missing \
            . > ~/build.json
        conan list --graph ~/build.json --graph-binaries=build --format=json > ~/pkglist.json
      if: ${{ steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Save Conan Cache
      uses: eBay/sisl/.github/actions/store_conan2@master
      with:
        key_prefix: HomeObjectDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}
      if: ${{ github.event_name != 'pull_request' && steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Reload Sisl Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        load_any: 'True'
        key_prefix: SislDeps13-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}
      if: ${{ inputs.testing == 'True' && github.event_name != 'pull_request' && steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Reload IOMgr Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        load_any: 'True'
        key_prefix: IOMgrDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}
      if: ${{ inputs.testing == 'True' && github.event_name != 'pull_request' && steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Reload NuRaftMesg Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        testing: 'False'
        path: import/nuraft_mesg
        key_prefix: NuMesgDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}
        fail_on_cache_miss: true
      if: ${{ inputs.testing == 'True' && github.event_name != 'pull_request' && steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Reload HomeStore Cache
      uses: eBay/sisl/.github/actions/load_conan2@master
      with:
        testing: 'False'
        path: import/homestore
        key_prefix: HomestoreDeps-${{ inputs.platform }}-${{ inputs.build-type }}-${{ inputs.malloc-impl }}-${{ inputs.prerelease }}
        fail_on_cache_miss: true
      if: ${{ inputs.testing == 'True' && github.event_name != 'pull_request' && steps.restore-cache.outputs.cache-hit != 'true' }}

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
        detached: true
      if: ${{ inputs.testing == 'True' }}

    - name: Create and Test Package
      run: |
        sanitize=$([[ "${{ inputs.tooling }}" == "Sanitize" ]] && echo "True" || echo "False")
        pre=$([[ "${{ inputs.build-type }}" != "Debug" ]] && echo "-o iomgr/*:prerelease=${{ inputs.prerelease }}" || echo "")
        conan create \
            ${pre} \
            -o sisl/*:malloc_impl=${{ inputs.malloc-impl }} \
            -o iomgr/*:testing=off \
            -o homestore/*:testing=off \
            -o homeobject/*:sanitize=${sanitize} \
            -s:h build_type=${{ inputs.build-type }} \
            --build missing \
            .
      if: ${{ inputs.testing == 'True' && inputs.tooling != 'Coverage' }}

    - name: Code Coverage Run
      run: |
        pre=$([[ "${{ inputs.build-type }}" != "Debug" ]] && echo "-o iomgr/*:prerelease=${{ inputs.prerelease }}" || echo "")
        conan build \
            ${pre} \
            -o sisl/*:malloc_impl=${{ inputs.malloc-impl }} \
            -o iomgr/*:testing=off \
            -o homestore/*:testing=off \
            -o homeobject/*:coverage=True \
            -s:h build_type=${{ inputs.build-type }} \
            --build missing \
            .
      if: ${{ inputs.testing == 'True' && inputs.tooling == 'Coverage' }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
      if: ${{ inputs.testing == 'True' && inputs.tooling == 'Coverage' }}
